<?xml version="1.0"?>
<doc>
    <assembly>
        <name>smartSpriteFX.PictureEngine</name>
    </assembly>
    <members>
        <member name="T:smartSuite.smartSpriteFX.Forms.ColorSupportForm">
            <summary>
            Represents a form to ask for the user supports for a definition
            after a color undefinition created by some color algorithm
            </summary>
        </member>
        <member name="F:smartSuite.smartSpriteFX.Forms.ColorSupportForm._piecePicture">
            <summary>
            It´s  picture based just in generated piece.
            </summary>
        </member>
        <member name="F:smartSuite.smartSpriteFX.Forms.ColorSupportForm._piece">
            <summary>
            It´s a piece which owns the image
            </summary>
        </member>
        <member name="F:smartSuite.smartSpriteFX.Forms.ColorSupportForm._selectedColor">
            <summary>
            It´s a selected color
            </summary>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Forms.ColorSupportForm.SetAsking(System.String)">
            <summary>
            Sets the asking to do to user.
            </summary>
            <param name="asking"></param>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Forms.ColorSupportForm.AnswerMe(smartSuite.smartSpriteFX.Pictures.Piece,System.Collections.Generic.List{System.Drawing.Color})">
            <summary>
            Asks for support from user to indicate how of colors patterns identified in search is the background color.
            </summary>
            <param name="piece">The piece that has been analysed.</param>
            <param name="colorList"></param>
            <returns></returns>
        </member>
        <member name="F:smartSuite.smartSpriteFX.Forms.ColorSupportForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Forms.ColorSupportForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Forms.ColorSupportForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:smartSuite.smartSpriteFX.Forms.Utilities.AskingForColorDelegateFactory">
            <summary>
            Offers an factory for delegation of asking color delegate
            </summary>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Forms.Utilities.AskingForColorDelegateFactory.GetInstanceForBackgroundColor">
            <summary>
            Get a instance for background color definition
            </summary>
            <returns></returns>
        </member>
        <member name="T:smartSuite.smartSpriteFX.Pictures.ColorPattern.BackgroundPattern">
            <summary>
            It´s an object which studies the pixels to detect background pattern
            </summary>
        </member>
        <member name="F:smartSuite.smartSpriteFX.Pictures.ColorPattern.BackgroundPattern._colorComparer">
            <summary>
            It´s a comparator for colors
            </summary>
        </member>
        <member name="F:smartSuite.smartSpriteFX.Pictures.ColorPattern.BackgroundPattern._topLeft">
            <summary>
            It´s the point of left coordinate
            </summary>
        </member>
        <member name="F:smartSuite.smartSpriteFX.Pictures.ColorPattern.BackgroundPattern._topRight">
            <summary>
            It´s the top of right coordinate
            </summary>
        </member>
        <member name="F:smartSuite.smartSpriteFX.Pictures.ColorPattern.BackgroundPattern._lowerLeft">
            <summary>
            It´s the lower left coordinate
            </summary>
        </member>
        <member name="F:smartSuite.smartSpriteFX.Pictures.ColorPattern.BackgroundPattern._lowerRight">
            <summary>
            It´s the lower right coordinate
            </summary>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.ColorPattern.BackgroundPattern.GetReplacementColor(smartSuite.smartSpriteFX.Pictures.Piece,smartSuite.smartSpriteFX.Pictures.ColorPattern.IAskingForColorDelegate)">
            <summary>
            Gets the replacement colors
            </summary>
            <returns></returns>
        </member>
        <member name="F:smartSuite.smartSpriteFX.Pictures.ColorPattern.BackgroundPattern._replacementColorList">
            <summary>
            It´s a color to replace
            </summary>
        </member>
        <member name="P:smartSuite.smartSpriteFX.Pictures.ColorPattern.BackgroundPattern.TransparentColor">
            <summary>
            Gets the transparentColor got after <see cref="M:smartSuite.smartSpriteFX.Pictures.ColorPattern.BackgroundPattern.DoTransparentBorder(smartSuite.smartSpriteFX.Pictures.Piece,smartSuite.smartSpriteFX.Pictures.ColorPattern.IAskingForColorDelegate)"/> method.
            </summary>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.ColorPattern.BackgroundPattern.Learn(System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            Includes the coordinates to study the pattern
            </summary>
            <param name="x">It´s the x coordinate</param>
            <param name="y">It´s the y coordinate</param>
            <param name="color">It´s the color of pixel</param>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.ColorPattern.BackgroundPattern.FormatKey(System.Int32,System.Int32)">
            <summary>
            Returns a key ready for be included on learntCache
            </summary>
            <param name="x">It´s the x coordinate</param>
            <param name="y">It´s the y coordinate</param>
            <returns></returns>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.ColorPattern.BackgroundPattern.GetFromKeyX(System.String)">
            <summary>
            Gets the X component from a key gotten from learntCahce
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.ColorPattern.BackgroundPattern.GetFromKeyY(System.String)">
            <summary>
            Gets the Y component from a key gotten from learntCahce
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.ColorPattern.BackgroundPattern.DoTransparentBorder(smartSuite.smartSpriteFX.Pictures.Piece,smartSuite.smartSpriteFX.Pictures.ColorPattern.IAskingForColorDelegate)">
            <summary>
            Does the transparent border
            </summary>
            <param name="piece">It´s a piece to deal.</param>
            <param name="askingForColorDelegate">An instance used to support the algorithm after an indefinition of a color.</param>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.ColorPattern.BackgroundPattern.GetReplacementColor(smartSuite.smartSpriteFX.Pictures.Point,smartSuite.smartSpriteFX.Pictures.Point,smartSuite.smartSpriteFX.Pictures.Point,smartSuite.smartSpriteFX.Pictures.Point,smartSuite.smartSpriteFX.Pictures.Piece,smartSuite.smartSpriteFX.Pictures.ColorPattern.IAskingForColorDelegate)">
            <summary>
            Gets the replacement colors
            </summary>
            <returns></returns>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.ColorPattern.BackgroundPattern.GetHorizontalReplacementColor(smartSuite.smartSpriteFX.Pictures.Picture,smartSuite.smartSpriteFX.Pictures.Point,smartSuite.smartSpriteFX.Pictures.Point,System.Collections.Generic.List{System.Drawing.Color})">
            <summary>
            Gets a replacement color for horizontal coordinates
            </summary>
            <param name="invalidColorList">It´s a list of colors to ignore</param>
            <returns></returns>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.ColorPattern.BackgroundPattern.GetSimilarColor(System.Collections.Generic.Dictionary{System.Drawing.Color,System.Int32}.KeyCollection,System.Drawing.Color)">
            <summary>
            Gets a color similar in collection
            </summary>
            <param name="keys"></param>
            <param name="colorList"></param>
            <returns></returns>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.ColorPattern.BackgroundPattern.GetVerticalReplacementColor(smartSuite.smartSpriteFX.Pictures.Picture,smartSuite.smartSpriteFX.Pictures.Point,smartSuite.smartSpriteFX.Pictures.Point,System.Collections.Generic.List{System.Drawing.Color})">
            <summary>
            Gets a replacement color for vertical coordinates
            </summary>
            <param name="invalidColorList">It´s a list of colors to ignore</param>
            <returns></returns>
        </member>
        <member name="T:smartSuite.smartSpriteFX.Pictures.ColorPattern.ColorEqualityComparer">
            <summary>
            Represents a color equality comparer for colors
            </summary>
        </member>
        <member name="F:smartSuite.smartSpriteFX.Pictures.ColorPattern.ColorEqualityComparer._sensibility">
            <summary>
            It´s a sensibility, used to check similiar colors
            </summary>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.ColorPattern.ColorEqualityComparer.#ctor">
            <summary>
            Creates an instance of the object
            </summary>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.ColorPattern.ColorEqualityComparer.#ctor(System.Single)">
            <summary>
            Creates an instance of the object
            </summary>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.ColorPattern.ColorEqualityComparer.LooksLike(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Gets a indicator informing if whe colors are similar
            </summary>
            <param name="comparing"></param>
            <param name="compareTo"></param>
            <returns></returns>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.ColorPattern.ColorEqualityComparer.LooksLikeByHeat(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Gets a indicator informing if the colors are similar
            </summary>
            <param name="comparing"></param>
            <param name="compareTo"></param>
            <returns></returns>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.ColorPattern.ColorEqualityComparer.LooksLikeBySensibility(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Gets a indicator informing if whe colors are similar
            </summary>
            <param name="comparing"></param>
            <param name="compareTo"></param>
            <returns></returns>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.ColorPattern.ColorEqualityComparer.EqualsButNoAlpha(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Gets a indicator comparing a both colors, but not considering the alpha component
            </summary>
            <param name="color"></param>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.ColorPattern.ColorEqualityComparer.LooksLikeBySensibility2(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Gets a indicator informing if whe colors are similar
            </summary>
            <param name="comparing"></param>
            <param name="compareTo"></param>
            <returns></returns>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.ColorPattern.ColorEqualityComparer.LooksLikeBySensibility3(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Gets a indicator informing if whe colors are similar
            </summary>
            <param name="comparing"></param>
            <param name="compareTo"></param>
            <returns></returns>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.ColorPattern.ColorEqualityComparer.CheckSimiliarity(System.Int32,System.Int32)">
            <summary>
            Checks if there's some similiarity between the comparer factor
            </summary>
            <param name="refFactor">It´s a referecial color factor</param>
            <param name="factor">It´s a comparative color factor, applied to another color components.</param>
        </member>
        <member name="T:smartSuite.smartSpriteFX.Pictures.ColorPattern.ColorFactor">
            <summary>
            Represents a difference between two colors expressed by their components
            </summary>
        </member>
        <member name="P:smartSuite.smartSpriteFX.Pictures.ColorPattern.ColorFactor.A">
            <summary>
            Gets or sets the correspondent color component
            </summary>
        </member>
        <member name="P:smartSuite.smartSpriteFX.Pictures.ColorPattern.ColorFactor.R">
            <summary>
            Gets or sets the correspondent color component
            </summary>
        </member>
        <member name="P:smartSuite.smartSpriteFX.Pictures.ColorPattern.ColorFactor.G">
            <summary>
            Gets or sets the correspondent color component
            </summary>
        </member>
        <member name="P:smartSuite.smartSpriteFX.Pictures.ColorPattern.ColorFactor.B">
            <summary>
            Gets or sets the correspondent color component
            </summary>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.ColorPattern.ColorFactor.GetColorFactorByDifference(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Gets a color factor by difference
            </summary>
            <param name="comparing"></param>
            <param name="compareTo"></param>
            <returns></returns>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.ColorPattern.ColorFactor.GetColorFactorByDivision(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Gets a color factor by division
            </summary>
            <param name="comparing"></param>
            <param name="compareTo"></param>
            <returns></returns>
        </member>
        <member name="T:smartSuite.smartSpriteFX.Pictures.ColorPattern.ColorFrequency">
            <summary>
            Represents a frequency of a color
            </summary>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.ColorPattern.ColorFrequency.GetPercentage">
            <summary>
            Gets the percentage of frequency after length
            </summary>
            <returns></returns>
        </member>
        <member name="T:smartSuite.smartSpriteFX.Pictures.ColorPattern.ColorInfo">
            <summary>
            Represents an information from a color
            </summary>
        </member>
        <member name="F:smartSuite.smartSpriteFX.Pictures.ColorPattern.ColorInfo._innerColor">
            <summary>
            It´s an inner color
            </summary>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.ColorPattern.ColorInfo.#ctor(System.Drawing.Color)">
            <summary>
            Creates an instance of the object
            </summary>
            <param name="innerColor"></param>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.ColorPattern.ColorInfo.GetInnerColor">
            <summary>
            Gets the inner color
            </summary>
            <returns></returns>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.ColorPattern.ColorInfo.SetInnerColor(System.Drawing.Color)">
            <summary>
            Changes the inner color
            </summary>
            <param name="newColor"></param>
        </member>
        <member name="T:smartSuite.smartSpriteFX.Pictures.ColorPattern.IAskingForColorDelegate">
            <summary>
            Defines how an algorithm to ask support from user to define the background color definition  must be.
            </summary>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.ColorPattern.IAskingForColorDelegate.AnswerMe(smartSuite.smartSpriteFX.Pictures.Piece,System.Collections.Generic.List{System.Drawing.Color})">
            <summary>
            Asks for support from user to indicate how of colors patterns identified in search is the background color.
            </summary>
            <param name="piece">The piece that has been analysed.</param>
            <param name="colorList"></param>
            <returns></returns>
        </member>
        <member name="T:smartSuite.smartSpriteFX.Pictures.Group">
            <summary>
            Represents a group of piece to join the related pieces of image
            </summary>
        </member>
        <member name="P:smartSuite.smartSpriteFX.Pictures.Group.Name">
            <summary>
            It´s the name of group
            </summary>
        </member>
        <member name="P:smartSuite.smartSpriteFX.Pictures.Group.RelatedPieceList">
            <summary>
            Join a collection of related pieces of pictures.
            </summary>
        </member>
        <member name="P:smartSuite.smartSpriteFX.Pictures.Group.ParentGroup">
            <summary>
            It's the eventual parent of group
            </summary>
        </member>
        <member name="P:smartSuite.smartSpriteFX.Pictures.Group.ChildGroupList">
            <summary>
            It´s a list of child list
            </summary>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.Group.Generate(System.String,System.Boolean)">
            <summary>
            Generates a group structure
            </summary>
            <param name="folder"></param>
            <param name="inferTransparentBackground">It sets the generator to generate pieces with transparent background;</param>
        </member>
        <member name="T:smartSuite.smartSpriteFX.Pictures.Picture">
            <summary>
            Represents an image
            </summary>
        </member>
        <member name="F:smartSuite.smartSpriteFX.Pictures.Picture._width">
            <summary>
            Represents the width of picture
            </summary>
        </member>
        <member name="F:smartSuite.smartSpriteFX.Pictures.Picture._height">
            <summary>
            Represents whe height of picture
            </summary>
        </member>
        <member name="P:smartSuite.smartSpriteFX.Pictures.Picture.OriginalWidth">
            <summary>
            Gets the original width of picture with no filters applied
            </summary>
        </member>
        <member name="P:smartSuite.smartSpriteFX.Pictures.Picture.OriginalHeight">
            <summary>
            Gets the original height of picture with no filters applied
            </summary>
        </member>
        <member name="F:smartSuite.smartSpriteFX.Pictures.Picture._transparentColor">
            <summary>
            It´s the transparent color
            </summary>
        </member>
        <member name="F:smartSuite.smartSpriteFX.Pictures.Picture._buffer">
            <summary>
            It´s a buffer of colors, where key it's a combination of x and y coordinates. 
            </summary>
        </member>
        <member name="P:smartSuite.smartSpriteFX.Pictures.Picture.ColorCount">
            <summary>
            Gets the amount of color of current picture
            </summary>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.Picture.#ctor(System.String)">
            <summary>
            Creates an image
            </summary>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.Picture.Merge(smartSuite.smartSpriteFX.Pictures.Picture)">
            <summary>
            Merge the buffer of another picture
            </summary>
            <param name="other"></param>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.Picture.GetInstanceLazy(System.String)">
            <summary>
            Gets the instance of object without load the buffer.
            </summary>
            <param name="fileNameItem"></param>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.Picture.GetAllPixels">
            <summary>
            Gets all the pixels from Picture
            </summary>
            <returns></returns>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.Picture.GetAllColors">
            <summary>
            Gets all the colors from Picture
            </summary>
            <returns></returns>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.Picture.RemovePixel(System.Int32,System.Int32)">
            <summary>
            Removes the pixel
            </summary>
            <returns>An indicator informing that the pixel has been excluded.</returns>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.Picture.ShareDataWithMe(smartSuite.smartSpriteFX.Pictures.Picture)">
            <summary>
            Gets the databases from another picture
            </summary>
            <param name="other"></param>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.Picture.ReplaceColor(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Replaces the color for a new one.
            </summary>
            <param name="oldColor"></param>
            <param name="newColor"></param>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.Picture.#ctor">
            <summary>
            Creates an instance of the object.
            </summary>
            <remarks>
            This constructor was intented to be used internally only.
            </remarks>
        </member>
        <member name="F:smartSuite.smartSpriteFX.Pictures.Picture._fullPath">
            <summary>
            It´s the fullname of picture
            </summary>
        </member>
        <member name="P:smartSuite.smartSpriteFX.Pictures.Picture.LastPoint">
            <summary>
            It's the last clicked point
            </summary>
        </member>
        <member name="P:smartSuite.smartSpriteFX.Pictures.Picture.FullPath">
            <summary>
            Gets the fullpath of image
            </summary>
        </member>
        <member name="P:smartSuite.smartSpriteFX.Pictures.Picture.Width">
            <summary>
            Gets the width of picture
            </summary>
        </member>
        <member name="P:smartSuite.smartSpriteFX.Pictures.Picture.Height">
            <summary>
            Gets the height of picture
            </summary>
        </member>
        <member name="P:smartSuite.smartSpriteFX.Pictures.Picture.TransparentColor">
            <summary>
            Sets or gets the transparent color
            </summary>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.Picture.LoadBuffer(System.String)">
            <summary>
            Loads the buffer of image
            </summary>
            <param name="fullPath"></param>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.Picture.LoadBuffer(System.Drawing.Bitmap)">
            <summary>
            Load the buffer
            </summary>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.Picture.SetPixel(System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            Loads the color info cache
            </summary>
            <param name="y"></param>
            <param name="x"></param>
            <param name="color"></param>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.Picture.SetPixel(System.Collections.Generic.List{smartSuite.smartSpriteFX.PictureEngine.Pictures.PointInfo})">
            <summary>
            Loads the color info cache
            </summary>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.Picture.FormatKey(System.Int32,System.Int32)">
            <summary>
            Formats the coordinates to use as keys.
            </summary>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.Picture.ToPoint(System.String)">
            <summary>
            Converts key used on cache to point
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.Picture.Clone">
            <summary>
            Creates and returns a copy of the object
            </summary>
            <returns></returns>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.Picture.Clone(smartSuite.smartSpriteFX.Pictures.Picture.CloneMode)">
            <summary>
            Creates and returns a copy of the object
            </summary>
            <param name="cloneMode">It´s the mode of clonage</param>
            <returns></returns>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.Picture.GetPixel(System.Int32,System.Int32)">
            <summary>
            Gets a pixel from coordinate
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.Picture.Find(System.Drawing.Color[])">
            <summary>
            Finds a list of points for the color list
            </summary>
            <returns></returns>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.Picture.ListBorder">
            <summary>
            Gets the point of image considered border
            </summary>
            <returns></returns>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.Picture.ReplacePixel(System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            Replaces a pixel in the buffer
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="newColor" />		
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.Picture.ReplacePixel(smartSuite.smartSpriteFX.Pictures.PointRange)">
            <summary>
            Replaces pixels in PointRange
            </summary>
            <param name="pointRange"></param>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.Picture.Overwrite(System.Drawing.Color)">
            <summary>
            Overwrites the picture
            </summary>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.Picture.Save(System.String,System.Drawing.Color,System.Collections.Generic.IEqualityComparer{System.Drawing.Color})">
            <summary>
            Saves the file
            </summary>
            <param name="fileName"></param>
            <param name="transparentColor"></param>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.Picture.ClearCache">
            <summary>
            Clears the picture cache
            </summary>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.Picture.GetInstance(System.String)">
            <summary>
            Gets a instance of picture
            </summary>
            <param name="fullFileName"></param>
            <returns></returns>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.Picture.SaveCopy(System.String)">
            <summary>
            Saves a copy of picture.
            </summary>
            <param name="copyFileName" />		
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.Picture.ReleaseBuffer">
            <summary>
            Releases buffer
            </summary>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.Picture.BeginBatchUpdate">
            <summary>
            Prepare for several updates
            </summary>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.Picture.EndBatchUpdate">
            <summary>
            Ends a batch update
            </summary>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.Picture.CancelBatchUpdate">
            <summary>
            Cancels a batch update
            </summary>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.Picture.Contains(smartSuite.smartSpriteFX.PictureEngine.Pictures.PointInfo)">
            <summary>
            Indicates if a point exists in picture
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.Picture.GetColumns">
            <summary>
            Gets pixels based on column
            </summary>
            <returns></returns>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.Picture.GetLines">
            <summary>
            Gets pixels based on lines
            </summary>
            <returns></returns>
        </member>
        <member name="T:smartSuite.smartSpriteFX.Pictures.Picture.CloneMode">
            <summary>
            It´s the mode of clone operation
            </summary>
        </member>
        <member name="T:smartSuite.smartSpriteFX.Pictures.Piece">
            <summary>
            Represents a piece of picture, created by user
            </summary>
        </member>
        <member name="F:smartSuite.smartSpriteFX.Pictures.Piece._takenPictureFullFileName">
            <summary>
            Gets the generated file name from <see cref="!:TakePicture(string)"/> method.
            </summary>
        </member>
        <member name="P:smartSuite.smartSpriteFX.Pictures.Piece.Name">
            <summary>
            It´s the name of piece of picture
            </summary>
        </member>
        <member name="P:smartSuite.smartSpriteFX.Pictures.Piece.Parent">
            <summary>
            It´s the parent of piece
            </summary>
        </member>
        <member name="F:smartSuite.smartSpriteFX.Pictures.Piece._referencePicture">
            <summary>
            It's the reference picture about the piece is part of it
            </summary>
        </member>
        <member name="P:smartSuite.smartSpriteFX.Pictures.Piece.PointA">
            <summary>
            It's the first point of a hypotenuse
            </summary>
        </member>
        <member name="P:smartSuite.smartSpriteFX.Pictures.Piece.PointB">
            <summary>
            It's a last point of a hypotenuse
            </summary>
        </member>
        <member name="P:smartSuite.smartSpriteFX.Pictures.Piece.PointD">
            <summary>
            
            </summary>
        </member>
        <member name="P:smartSuite.smartSpriteFX.Pictures.Piece.PointC">
            <summary>
            
            </summary>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.Piece.#ctor(smartSuite.smartSpriteFX.Pictures.Picture,smartSuite.smartSpriteFX.Pictures.Point,smartSuite.smartSpriteFX.Pictures.Point)">
            <summary>
            Creates  instance of an object
            </summary>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.Piece.Fix">
            <summary>
            Corrects points based on main points
            </summary>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.Piece.GetReferencePicture">
            <summary>
            Gets the reference picture whose the picture is part of it
            </summary>
            <returns></returns>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.Piece.GetFullPath">
            <summary>
            Gets the full path, based on the parent pieces
            </summary>
            <returns></returns>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.Piece.ChangeName(System.String)">
            <summary>
            Changesthe name of piece
            </summary>
            <param name="newName"></param>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.Piece.TakePicture(System.String,System.Boolean)">
            <summary>
            Generates a file with the content of piece of image
            </summary>
            <param name="fullPath"></param>
            <param name="inferTransparentBackground">It sets the generator to generate pieces with transparent background;</param>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.Piece.OnAskingForBackgroundColorDelegate">
            <summary>
            Returns a delegate for asking color for background
            </summary>
            <returns></returns>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.Piece.Duplicate">
            <summary>
            Duplicates the current piece
            </summary>
            <returns></returns>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.Piece.Contains(smartSuite.smartSpriteFX.Pictures.Piece)">
            <summary>
            Checks if a piece contains another one
            </summary>
            <returns></returns>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.Piece.OverCover(smartSuite.smartSpriteFX.Pictures.Piece)">
            <summary>
            Covers the area of piece with a suppose existent part behind of image
            </summary>
            <param name="child">Normally, this parameter is the child</param>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.Piece.GetTakenPictureFullFileName">
            <summary>
            Gets the taken picture file name, correspondent to piece
            </summary>
        </member>
        <member name="T:smartSuite.smartSpriteFX.Pictures.PieceCollection">
            <summary>
            Represents a collection of pieces of a picture
            </summary>
        </member>
        <member name="F:smartSuite.smartSpriteFX.Pictures.PieceCollection._referencePicture">
            <summary>
            It´s a reference picture from where the cut was taken
            </summary>
        </member>
        <member name="P:smartSuite.smartSpriteFX.Pictures.PieceCollection.PieceList">
            <summary>
            Represents a list of pieces
            </summary>
        </member>
        <member name="P:smartSuite.smartSpriteFX.Pictures.PieceCollection.GroupList">
            <summary>
            It´s list of groups
            </summary>
        </member>
        <member name="P:smartSuite.smartSpriteFX.Pictures.PieceCollection.ReferencePicture">
            <summary>
            Gets the reference picture
            </summary>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.PieceCollection.Generate(System.String,System.Boolean)">
            <summary>
            Generates the pieces created
            </summary>
            <param name="folder"></param>
            <param name="inferTransparentBackground">It sets the generator to generate pieces with transparent background;</param>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.PieceCollection.Save(System.String)">
            <summary>
            Saves the piece collection information
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.PieceCollection.Load(System.String)">
            <summary>
            Loads a saved piece collection
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="T:smartSuite.smartSpriteFX.Pictures.PixelPatterns.ConstantCoveringPattern">
            <summary>
            It´s a covering algorithm for constant covering based in the last line color
            </summary>
        </member>
        <member name="F:smartSuite.smartSpriteFX.Pictures.PixelPatterns.ConstantCoveringPattern._referentialRangeList">
            <summary>
            It´s a referential pattern range
            </summary>
        </member>
        <member name="F:smartSuite.smartSpriteFX.Pictures.PixelPatterns.ConstantCoveringPattern._referentialY">
            <summary>
            It´s referential coordinate Y
            </summary>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.PixelPatterns.ConstantCoveringPattern.GetPixel(System.Collections.Generic.List{smartSuite.smartSpriteFX.Pictures.PixelPatterns.PixelInfo},System.Int32,System.Int32)">
            <summary>
            Gets a pixel correspondent to coordinates
            </summary>
            <param name="pixelInfoList"></param>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.PixelPatterns.ConstantCoveringPattern.provideReferentialPatternLine(System.Collections.Generic.List{smartSuite.smartSpriteFX.Pictures.PixelPatterns.PixelInfo},System.Int32,System.Int32)">
            <summary>
            Fills the referentialPatternLine attribute
            </summary>
            <param name="pixelInfoList"></param>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="T:smartSuite.smartSpriteFX.Pictures.PixelPatterns.ICoveringPattern">
            <summary>
            Defines how a pixel covering pattern must be
            </summary>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.PixelPatterns.ICoveringPattern.GetPixel(System.Collections.Generic.List{smartSuite.smartSpriteFX.Pictures.PixelPatterns.PixelInfo},System.Int32,System.Int32)">
            <summary>
            Gets a pixel correspondent to coordinates
            </summary>
            <param name="pixelInfoList"></param>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="T:smartSuite.smartSpriteFX.Pictures.PixelPatterns.PixelInfo">
            <summary>
            Represents informations about to a pixel
            </summary>
        </member>
        <member name="P:smartSuite.smartSpriteFX.Pictures.PixelPatterns.PixelInfo.X">
            <summary>
            
            </summary>
        </member>
        <member name="P:smartSuite.smartSpriteFX.Pictures.PixelPatterns.PixelInfo.Y">
            <summary>
            
            </summary>
        </member>
        <member name="P:smartSuite.smartSpriteFX.Pictures.PixelPatterns.PixelInfo.Color">
            <summary>
            
            </summary>
        </member>
        <member name="T:smartSuite.smartSpriteFX.Pictures.PixelPatterns.PixelPattern">
            <summary>
            Represents a pattern analyser to study the pixel patterns of a image.
            </summary>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.PixelPatterns.PixelPattern.#ctor">
            <summary>
            Represents a pattern analyser to study the pixel patterns of a image.
            </summary>
        </member>
        <member name="F:smartSuite.smartSpriteFX.Pictures.PixelPatterns.PixelPattern._learntCache">
            <summary>
            It´s a cache dictionary where key is formed by coordinate x and y and the value is the color.
            </summary>
        </member>
        <member name="F:smartSuite.smartSpriteFX.Pictures.PixelPatterns.PixelPattern._coveringPattern">
            <summary>
            It´s the covering pattern
            </summary>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.PixelPatterns.PixelPattern.Learn(System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            Includes the coordinates to study the pattern
            </summary>
            <param name="x">It´s the x coordinate</param>
            <param name="y">It´s the y coordinate</param>
            <param name="color">It´s the color of pixel</param>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.PixelPatterns.PixelPattern.GetPattern(System.Int32,System.Int32)">
            <summary>
            Gets the learnt pixel pattern for the coordinate
            </summary>
            <param name="x">It´s the x coordinate</param>
            <param name="y">It´s the y coordinate</param>
        </member>
        <member name="T:smartSuite.smartSpriteFX.Pictures.Point">
            <summary>
            Represents a cartesyan coordinate
            </summary>
        </member>
        <member name="P:smartSuite.smartSpriteFX.Pictures.Point.X">
            <summary>
            It's a coordinate X
            </summary>
        </member>
        <member name="P:smartSuite.smartSpriteFX.Pictures.Point.Y">
            <summary>
            It´s a coordinate Y
            </summary>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.Point.Clone">
            <summary>
            Returns a clone of point
            </summary>
            <returns></returns>
        </member>
        <member name="T:smartSuite.smartSpriteFX.Pictures.PointRange">
            <summary>
            It´s a range of points, similar to a rectangle
            </summary>
        </member>
        <member name="F:smartSuite.smartSpriteFX.Pictures.PointRange._startPoint">
            <summary>
            It´s a start point of point range
            </summary>
        </member>
        <member name="F:smartSuite.smartSpriteFX.Pictures.PointRange._endPoint">
            <summary>
            It´s a end point of point range
            </summary>
        </member>
        <member name="P:smartSuite.smartSpriteFX.Pictures.PointRange.Color">
            <summary>
            It´s the color of range
            </summary>
        </member>
        <member name="P:smartSuite.smartSpriteFX.Pictures.PointRange.StartPoint">
            <summary>
            Gets the start point
            </summary>
        </member>
        <member name="P:smartSuite.smartSpriteFX.Pictures.PointRange.EndPoint">
            <summary>
            Gets the endpoint
            </summary>
        </member>
        <member name="F:smartSuite.smartSpriteFX.Pictures.PointRange._currentRange">
            <summary>
            It´s the current Point range.
            </summary>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.PointRange.SetPoint(System.Int32,System.Int32)">
            <summary>
            Set a point
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.PointRange.IsContained(System.Int32,System.Int32)">
            <summary>
            Gets a indicator informing that the point is contained inside of point range.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.PointRange.HaveThisContained(System.Int32,System.Int32)">
            <summary>
            Verifies if the current point range have the X and Y contained.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.PointRange.ToPointList">
            <summary>
            Converts the range in a point list
            </summary>
            <returns></returns>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.PointRange.ToPointInfoList">
            <summary>
            Converts the range in a point list
            </summary>
            <returns></returns>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.PointRange.ConvertMeToPointList">
            <summary>
            Converts the current point list to a set of points
            </summary>
            <returns></returns>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.PointRange.ConvertMeToPointInfoList">
            <summary>
            Converts the current point list to a set of points
            </summary>
            <returns></returns>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.PointRange.SetPoint(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the range
            </summary>
            <param name="initialX"></param>
            <param name="initialY"></param>
            <param name="finalX"></param>
            <param name="finalY"></param>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Pictures.PointRange.UpdatePoint(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Updates the points
            </summary>
            <param name="initialX"></param>
            <param name="initialY"></param>
            <param name="finalX"></param>
            <param name="finalY"></param>
        </member>
        <member name="T:smartSuite.smartSpriteFX.PictureEngine.Pictures.ColorPattern.ColorUtil">
            <summary>
            Offers utilities to mantains colors
            </summary>
        </member>
        <member name="M:smartSuite.smartSpriteFX.PictureEngine.Pictures.ColorPattern.ColorUtil.GetSlightlyDifferentColorComponent(System.Int32)">
            <summary>
            Gets the color component slighty different to trick the transparent mechanism
            </summary>
            <param name="colorComponent"></param>
            <returns></returns>
        </member>
        <member name="M:smartSuite.smartSpriteFX.PictureEngine.Pictures.ColorPattern.ColorUtil.GetSlightlyDifferentColor(System.Drawing.Color)">
            <summary>
            Gets the color slighty different to trick the transparent mechanism 
            </summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="T:smartSuite.smartSpriteFX.PictureEngine.Pictures.ColorPattern.LookLikeColorComparer">
            <summary>
            Represents a color comparer based on similiarity between color, used for pour acuracy.
            </summary>
        </member>
        <member name="F:smartSuite.smartSpriteFX.PictureEngine.Pictures.ColorPattern.LookLikeColorComparer.innerComparer">
            <summary>
            It´s a inner comparer
            </summary>
        </member>
        <member name="T:smartSuite.smartSpriteFX.PictureEngine.Pictures.Data.PictureDatabase">
            <summary>
            Represents a manager for databases
            </summary>
        </member>
        <member name="F:smartSuite.smartSpriteFX.PictureEngine.Pictures.Data.PictureDatabase._transactionStartTime">
            <summary>
            It´s the start timeof transaction
            </summary>
        </member>
        <member name="F:smartSuite.smartSpriteFX.PictureEngine.Pictures.Data.PictureDatabase._sessionID">
            <summary>
            It´s the sessionID of datas.
            </summary>
        </member>
        <member name="F:smartSuite.smartSpriteFX.PictureEngine.Pictures.Data.PictureDatabase._dataSourceIndex">
            <summary>
            Relates the key with the point in dataSource
            </summary>
        </member>
        <member name="F:smartSuite.smartSpriteFX.PictureEngine.Pictures.Data.PictureDatabase._dataSource">
            <summary>
            It´s a datasource
            </summary>
        </member>
        <member name="M:smartSuite.smartSpriteFX.PictureEngine.Pictures.Data.PictureDatabase.#ctor">
            <summary>
            This constructor has been created for goals of design and can not be used for external calls
            </summary>
        </member>
        <member name="P:smartSuite.smartSpriteFX.PictureEngine.Pictures.Data.PictureDatabase.SessionID">
            <summary>
            Gets the identification of session
            </summary>
        </member>
        <member name="M:smartSuite.smartSpriteFX.PictureEngine.Pictures.Data.PictureDatabase.Open">
            <summary>
            Gets a opened database
            </summary>
            <returns></returns>
        </member>
        <member name="M:smartSuite.smartSpriteFX.PictureEngine.Pictures.Data.PictureDatabase.Close">
            <summary>
            Closes the database
            </summary>
        </member>
        <member name="M:smartSuite.smartSpriteFX.PictureEngine.Pictures.Data.PictureDatabase.INSERT(System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            Inserts a record
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="color"></param>
        </member>
        <member name="M:smartSuite.smartSpriteFX.PictureEngine.Pictures.Data.PictureDatabase.INSERT(System.Collections.Generic.List{smartSuite.smartSpriteFX.PictureEngine.Pictures.PointInfo})">
            <summary>
            Inserts a bunch of points
            </summary>
            <param name="pointInfoList"></param>
        </member>
        <member name="M:smartSuite.smartSpriteFX.PictureEngine.Pictures.Data.PictureDatabase.DELETE(System.Int32,System.Int32)">
            <summary>
            Removes the pixel
            </summary>
            <returns>An indicator informing that the pixel has been excluded.</returns>
        </member>
        <member name="M:smartSuite.smartSpriteFX.PictureEngine.Pictures.Data.PictureDatabase.UPDATE(System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            Updates a record
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="color"></param>
            <returns>Gets the amount of records updated</returns>
        </member>
        <member name="M:smartSuite.smartSpriteFX.PictureEngine.Pictures.Data.PictureDatabase.UPDATE(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Updates colors in all records
            </summary>
            <returns>Gets the amount of records updated</returns>
        </member>
        <member name="M:smartSuite.smartSpriteFX.PictureEngine.Pictures.Data.PictureDatabase.SELECT(System.Int32,System.Int32)">
            <summary>
            Gets the color information of coordination
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:smartSuite.smartSpriteFX.PictureEngine.Pictures.Data.PictureDatabase.SELECT(smartSuite.smartSpriteFX.Pictures.Point)">
            <summary>
            Gets the pointInfo of the point
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:smartSuite.smartSpriteFX.PictureEngine.Pictures.Data.PictureDatabase.SELECT(System.Drawing.Color)">
            <summary>
            Gets the points for the color
            </summary>
            <returns></returns>
        </member>
        <member name="M:smartSuite.smartSpriteFX.PictureEngine.Pictures.Data.PictureDatabase.SELECTALL">
            <summary>
            Gets all the points
            </summary>
            <returns></returns>
        </member>
        <member name="M:smartSuite.smartSpriteFX.PictureEngine.Pictures.Data.PictureDatabase.COUNT">
            <summary>
            Counts the amount of pixels
            </summary>
            <returns></returns>
        </member>
        <member name="M:smartSuite.smartSpriteFX.PictureEngine.Pictures.Data.PictureDatabase.COUNT(System.Drawing.Color)">
            <summary>
            Counts the amount of colors for the critera
            </summary>
            <returns></returns>
        </member>
        <member name="M:smartSuite.smartSpriteFX.PictureEngine.Pictures.Data.PictureDatabase.EXISTS(smartSuite.smartSpriteFX.Pictures.Point,System.Drawing.Color)">
            <summary>
            Checks if exists the color for the coordinates
            </summary>
            <returns></returns>
        </member>
        <member name="M:smartSuite.smartSpriteFX.PictureEngine.Pictures.Data.PictureDatabase.EXISTS(smartSuite.smartSpriteFX.Pictures.Point)">
            <summary>
            Checks if exists the color for the coordinates
            </summary>
            <returns></returns>
        </member>
        <member name="M:smartSuite.smartSpriteFX.PictureEngine.Pictures.Data.PictureDatabase.Clear">
            <summary>
            Clear all the cache
            </summary>
        </member>
        <member name="M:smartSuite.smartSpriteFX.PictureEngine.Pictures.Data.PictureDatabase.CLEAR">
            <summary>
            Deletes all the content of table
            </summary>
        </member>
        <member name="M:smartSuite.smartSpriteFX.PictureEngine.Pictures.Data.PictureDatabase.Clone">
            <summary>
            Clones the database
            </summary>
            <returns></returns>
        </member>
        <member name="M:smartSuite.smartSpriteFX.PictureEngine.Pictures.Data.PictureDatabase.Merge(smartSuite.smartSpriteFX.PictureEngine.Pictures.Data.PictureDatabase)">
            <summary>
            Merge other dataBase in the current dataBase
            </summary>
            <param name="other"></param>
        </member>
        <member name="M:smartSuite.smartSpriteFX.PictureEngine.Pictures.Data.PictureDatabase.GetAllColors">
            <summary>
            Gets all the colors of database
            </summary>
            <param name="other"></param>
        </member>
        <member name="M:smartSuite.smartSpriteFX.PictureEngine.Pictures.Data.PictureDatabase.CountColor">
            <summary>
            Gets the amount of colors of database
            </summary>
            <param name="other"></param>
        </member>
        <member name="M:smartSuite.smartSpriteFX.PictureEngine.Pictures.Data.PictureDatabase.BeginTransaction">
            <summary>
            Begins the transaction
            </summary>
        </member>
        <member name="M:smartSuite.smartSpriteFX.PictureEngine.Pictures.Data.PictureDatabase.RollbackTransaction">
            <summary>
            Rolls back the transaction
            </summary>
        </member>
        <member name="M:smartSuite.smartSpriteFX.PictureEngine.Pictures.Data.PictureDatabase.CommitTransaction">
            <summary>
            Commits the transaction
            </summary>
        </member>
        <member name="M:smartSuite.smartSpriteFX.PictureEngine.Pictures.Data.PictureDatabase.PrintTransactionTime(System.String)">
            <summary>
            Prints the transaction time
            </summary>
        </member>
        <member name="T:smartSuite.smartSpriteFX.PictureEngine.Pictures.PointInfo">
            <summary>
            Represents a composition of point and aditional information
            </summary>
        </member>
        <member name="P:smartSuite.smartSpriteFX.PictureEngine.Pictures.PointInfo.Color">
            <summary>
            Gets or sets color
            </summary>
        </member>
        <member name="M:smartSuite.smartSpriteFX.PictureEngine.Pictures.PointInfo.Clone">
            <summary>
            Clones the current object;
            </summary>
            <returns></returns>
        </member>
        <member name="T:smartSuite.smartSpriteFX.PictureEngine.Templates.UnityMetaFile">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:smartSuite.smartSpriteFX.PictureEngine.Templates.UnityMetaFile.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:smartSuite.smartSpriteFX.PictureEngine.Templates.UnityMetaFile.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:smartSuite.smartSpriteFX.PictureEngine.Templates.UnityMetaFile.EmptyGameObject">
             <summary>
               Looks up a localized string similar to fileFormatVersion: 2
            guid: [guid-without-trace]
            folderAsset: yes
            timeCreated: 1450310219
            licenseType: Free
            DefaultImporter:
              userData: 
              assetBundleName: 
              assetBundleVariant: .
             </summary>
        </member>
        <member name="P:smartSuite.smartSpriteFX.PictureEngine.Templates.UnityMetaFile.GameObject2D">
             <summary>
               Looks up a localized string similar to fileFormatVersion: 2
            guid: [guid-without-trace]
            timeCreated: 1450637947
            licenseType: Free
            TextureImporter:
              fileIDToRecycleName: {}
              serializedVersion: 2
              mipmaps:
                mipMapMode: 0
                enableMipMap: 1
                linearTexture: 0
                correctGamma: 0
                fadeOut: 0
                borderMipMap: 0
                mipMapFadeDistanceStart: 1
                mipMapFadeDistanceEnd: 3
              bumpmap:
                convertToNormalMap: 0
                externalNormalMap: 0
                heightScale: .25
                normalMapFilter: 0
              isReadable: 0
              grayScaleToAlpha: 0
              ge [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:smartSuite.smartSpriteFX.PictureEngine.Templates.UnityMetaFile.GuidPlaceHolder">
            <summary>
              Looks up a localized string similar to [guid-without-trace].
            </summary>
        </member>
        <member name="T:smartSuite.smartSpriteFX.Unity.IGameObject">
            <summary>
            Represents a generic element which can be an object or empty one
            </summary>
        </member>
        <member name="T:smartSuite.smartSpriteFX.Unity.MetaSprite">
            <summary>
            Represents a meta class of sprites
            </summary>
        </member>
        <member name="P:smartSuite.smartSpriteFX.Unity.MetaSprite.RelatedGameObject">
            <summary>
            It´s the game object represented by the meta sprite
            </summary>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Unity.MetaSprite.Generate(System.String)">
            <summary>
            Generates a meta file in specified path.
            </summary>
            <param name="fullPath"></param>
        </member>
        <member name="T:smartSuite.smartSpriteFX.Utilities.MathUtil">
            <summary>
            Offers math utilities
            </summary>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Utilities.MathUtil.GetBigger``1(``0,``0)">
            <summary>
            Gets the bigger number
            </summary>
            <typeparam name="T"></typeparam>
            <param name="number1"></param>
            <param name="number2"></param>
            <returns></returns>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Utilities.MathUtil.GetLower``1(``0,``0)">
            <summary>
            Gets the lower number
            </summary>
            <typeparam name="T"></typeparam>
            <param name="number1"></param>
            <param name="number2"></param>
            <returns></returns>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Utilities.MathUtil.SubtractAbsolute(System.Single,System.Single)">
            <summary>
            Gets the module resulted from substraction
            </summary>
            <param name="number1"></param>
            <param name="number2"></param>
            <returns></returns>
        </member>
        <member name="T:smartSuite.smartSpriteFX.Utilities.StaminaUtil">
            <summary>
            Offers a control to manipulate the "strength" of system, mainly about loopings
            </summary>
        </member>
        <member name="F:smartSuite.smartSpriteFX.Utilities.StaminaUtil._lastRest">
            <summary>
            It´s the moment when the system got rest for the last time
            </summary>
        </member>
        <member name="M:smartSuite.smartSpriteFX.Utilities.StaminaUtil.GetRestSometimes">
            <summary>
            Gets rest sometimes
            </summary>
        </member>
    </members>
</doc>
